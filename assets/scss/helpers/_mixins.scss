// Mixins

// Ye olde clearfix
@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

// Smooth text
@mixin smooth {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Aspect ratio padding mixin (e.g. @include aspect-ratio(192,180);)
@mixin aspect-ratio($width, $height) {
  display: block;
  background-size: cover;
  background-position: center;
  position: relative;
  height: 0;
  padding-top: #{$height / $width * 100%}; // aspect ratio
}

@mixin dashed-border($location: 'top', $offset: 0) {
  $pseudo: 'before';
  @if $location == 'bottom' {
    $pseudo: 'after';
  }
  &:#{$pseudo} {
    content: '';
    display: block;
    position: relative;
    #{$location}: -#{$offset};
    height: 1px;
    background-image: linear-gradient(to right, $black 50%, rgba(255,255,255,0) 0%);
    background-position: bottom;
    background-size: 10px 5px;
    background-repeat: repeat-x;
  }
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() {
  @media screen and (max-width: $breakpoint-sm - 1) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}
@mixin media-nav() {
  @media screen and (min-width: $breakpoint-nav) {
    @content;
  }
}
@mixin media-xl() {
  @media screen and (min-width: $breakpoint-xl) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res - 1px) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}
